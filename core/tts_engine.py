# core/tts_engine.py
# (V_Final - Switched to the simple and reliable gTTS)

import os
import re
from typing import Optional
from gtts import gTTS

class TextToSpeechEngine:
    """
    ‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç‡∏î‡πâ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏±‡∏á‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ gTTS (Google Text-to-Speech)
    - ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏á‡πà‡∏≤‡∏¢, ‡πÄ‡∏™‡∏ñ‡∏µ‡∏¢‡∏£, ‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ Dependency ‡∏ó‡∏µ‡πà‡∏ã‡∏±‡∏ö‡∏ã‡πâ‡∏≠‡∏ô
    """
    def __init__(self):
        print("üó£Ô∏è  Initializing Text-to-Speech Engine (gTTS)...")
        # gTTS ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏•‡πÉ‡∏î‡πÜ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÄ‡∏™‡∏°‡∏≠
        self.is_ready = True
        print("‚úÖ Text-to-Speech Engine (gTTS) is ready.")

    def _cleanup_text(self, text: str) -> str:
        """
        ‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡πà‡∏≠‡∏ô‡∏™‡πà‡∏á‡πÉ‡∏´‡πâ TTS (‡∏¢‡∏±‡∏á‡∏Ñ‡∏á‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå)
        """
        text = re.sub(r'[\*#`]', '', text)
        text = re.sub(r'\[(.*?)\]\(.*?\)', r'\1', text)
        # ‡∏•‡∏ö URL ‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡∏Å‡πà‡∏≠‡∏ô‡∏™‡πà‡∏á‡πÉ‡∏´‡πâ gTTS
        text = re.sub(r'https?://\S+', '', text)
        text = re.sub(r'\s+', ' ', text).strip()
        return text

    def synthesize(self, text: str, output_path: str = "temp_voice.mp3") -> Optional[str]:
        """
        ‡∏™‡∏±‡∏á‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏û‡∏π‡∏î‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏ü‡∏•‡πå .mp3 ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ gTTS
        """
        if not self.is_ready or not text:
            return None

        cleaned_text = self._cleanup_text(text)
        if not cleaned_text:
            return None

        print(f"üó£Ô∏è  [gTTS Engine] Synthesizing: '{cleaned_text[:50]}...'")

        try:
            # 1. ‡∏™‡∏£‡πâ‡∏≤‡∏á Object gTTS ‡πÇ‡∏î‡∏¢‡∏£‡∏∞‡∏ö‡∏∏‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏•‡∏∞‡∏†‡∏≤‡∏©‡∏≤ (th = ‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢)
            tts = gTTS(text=cleaned_text, lang='th')
            
            # 2. ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÄ‡∏õ‡πá‡∏ô .mp3
            tts.save(output_path)
            
            print(f"  - ‚úÖ Audio file created successfully at: {output_path}")
            return output_path

        except Exception as e:
            print(f"  - ‚ùå gTTS Synthesis failed: {e}")
            return None